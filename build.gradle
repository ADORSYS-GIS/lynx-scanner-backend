plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.star-zero.gradle.githook' version '1.2.1'
    id 'ru.netris.commitlint' version '1.4.3'
	id 'org.asciidoctor.jvm.pdf' version '4.0.2'
    id("org.openapi.generator") version "5.4.0"

}

group = 'com.ssegning.lynx'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('sentryVersion', "7.3.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation 'org.keycloak:keycloak-spring-boot-starter:24.0.3'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mongodb'
}

dependencyManagement {
    imports {
        mavenBom "io.sentry:sentry-bom:${sentryVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

asciidoctorPdf {
    sourceDir file('./docs')
    sources {
        include '**/*.adoc'
    }
    outputDir file('./build/pdf')
}

githook {
    failOnMissingHooksDir = false
    hooks {
        "commit-msg" {
            task = "commitlint -Dmsgfile=\$1"
        }
        "pre-commit" {
            task = "build"
        }
    }
}

commitlint {
    enforceRefs = false
}

openApiGenerate {
  generatorName = 'spring'
  inputSpec = "$rootDir/frontend/openapi.yaml"
  outputDir = "$buildDir/generated"
  apiPackage = 'com.ssegning.lynx.lynxbackend.api'
  modelPackage = 'com.ssegning.lynx.lynxbackend.model'
  invokerPackage = 'com.ssegning.lynx.lynxbackend.handler'

  configOptions = [
    useTags: 'true',
    library: 'spring-boot',
    serializableModel: 'true',
    dateLibrary: 'java8',
    useBeanValidation: 'true',
    performBeanValidation: 'true',
    interfaceOnly: 'true',
    useOptional: 'false',
    useSpringBoot3: 'true',
    useResponseEntity: 'false'
  ]
}

tasks.named("build") { dependsOn("openApiGenerate") }
